```{r}
# dataset <- redivis::organization("datapages")$dataset("palmerpenguins")
# penguins <- dataset$table("penguins")$to_tibble()
# ojs_define(data = penguins)
```

```{r}
data <- read.csv("data/my_data.csv")

# If you want, you can generate some dummy metadata so the JS part doesn't break:
vars <- lapply(names(data), function(nm) list(name = nm, label = nm, type = "string", statistics = list(numDistinct = length(unique(data[[nm]])))))
  
ojs_define(data = data)
ojs_define(vars = vars)

```

```{ojs}
Plot = import("https://esm.sh/@observablehq/plot@0.6.13")
d = transpose(data)

distinct_cutoff = 10

disc_types = ['string', 'boolean']
disc_vars = vars.filter(d => disc_types.includes(d.type) && d.statistics.numDistinct <= distinct_cutoff).map(d => [d.label ? d.label : d.name, d.name])
disc_opts = new Map([['', null]].concat(disc_vars))

cont_types = ['integer', 'float', 'date', 'datetime', 'time']
cont_vars = vars.filter(d => cont_types.includes(d.type) && d.statistics.numDistinct > distinct_cutoff).map(d => [d.label ? d.label : d.name, d.name])
cont_opts = new Map(cont_vars)
```
